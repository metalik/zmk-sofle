#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <7 8 9 10 11 12 20 21 22 23 24 25 33 34 35 36 37 38 46 47 48 49 50 51 59 60 61 62 63>; // Right side keys
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 5 13 14 15 16 17 18 26 27 28 29 30 31 39 40 41 42 43 44 52 53 54 55 56 57>; // Left side keys
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp ESC     &kp N1             &kp N2           &kp N3        &kp N4           &kp N5         &kp UP_ARROW     &kp N6       &kp N7            &kp N8        &kp N9            &kp N0                &kp BACKSPACE
&kp TAB     &kp Q              &kp W            &kp E         &kp R            &kp T          &kp DOWN_ARROW   &kp Y        &kp U             &kp I         &kp O             &kp P                 &kp BSLH
&kp CAPS    &hml LEFT_SHIFT A  &hml LEFT_ALT S  &hml LCTRL D  &hml LEFT_GUI F  &kp G          &kp LEFT_ARROW   &kp H        &hmr RIGHT_GUI J  &hmr RCTRL K  &hmr RIGHT_ALT L  &hmr RSHFT SEMICOLON  &kp APOS
&kp LSHFT   &kp Z              &kp X            &kp C         &kp V            &kp B          &kp RIGHT_ARROW  &kp N        &kp M             &kp COMMA     &kp DOT           &kp FSLH              &mt RIGHT_SHIFT ENTER
&kp C_MUTE  &kp LCTRL          &kp LEFT_GUI     &lt 4 ESC     &lt 2 TAB        &lt 1 ENTER    &kp ENTER        &lt 5 SPACE  &lt 6 BACKSPACE   &lt 3 DEL     &kp RIGHT_SHIFT   &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "BASE";
            label = "Base";
        };

        MOUSE {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6          &kp F7          &kp F8          &kp F9           &kp F10        &trans
&trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp LG(Z)       &kp LG(V)       &kp LG(C)       &kp LG(X)        &kp LG(LS(Z))  &trans
&trans      &trans           &trans          &trans           &trans           &mkp MB5           &mmv MOVE_LEFT   &msc SCRL_UP    &msc SCRL_LEFT  &mmv MOVE_UP    &msc SCRL_RIGHT  &mkp MB4       &trans
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &msc SCRL_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mkp MB5       &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &mkp LCLK       &mkp RCLK       &mkp MCLK       &trans           &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
            label = "Mouse";
        };

        NAV {
            display-name = "Nav";
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6         &kp F7          &kp F8          &kp F9        &kp F10        &trans
&trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp LG(Z)      &kp LG(V)       &kp LG(C)       &kp LG(HOME)  &kp LG(LS(Z))  &trans
&trans      &kp TILDE        &trans          &trans           &trans           &mkp MB5           &mmv MOVE_LEFT   &kp PAGE_UP    &kp HOME        &kp UP_ARROW    &kp END       &kp INSERT     &trans
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT     &trans         &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans         &trans          &trans          &trans        &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "Nav";
        };

        MEDIA {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6           &kp C_PREVIOUS   &kp C_PLAY_PAUSE  &kp C_NEXT  &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &rgb_ug RGB_TOG  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI   &kp F12     &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &rgb_ug RGB_ON   &rgb_ug RGB_EFR  &rgb_ug RGB_EFF   &trans      &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &rgb_ug RGB_OFF  &rgb_ug RGB_SPD  &rgb_ug RGB_SPI   &soft_off   &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans           &trans           &trans            &trans      &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "Media";
        };

        NUM {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans        &trans        &trans        &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp N7        &kp N8        &kp N9        &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp N0        &trans        &trans        &trans
            >;

            label = "Num Pad";
        };

        SYM {
            bindings = <
&trans  &trans    &trans           &trans        &trans                &trans                   &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp SEMI  &kp DOLLAR       &kp HASH      &kp EQUAL             &kp PLUS                 &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &kp EXCLAMATION  &kp AT_SIGN   &kp LEFT_BRACE        &kp RIGHT_BRACE          &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans           &kp GRAVE     &kp UNDER             &kp MINUS                &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "Symbols";
        };

        FUNC {
            bindings = <
&trans  &trans   &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans   &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "Functions";
        };
    };
};
